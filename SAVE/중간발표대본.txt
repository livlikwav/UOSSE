<발표 시간 5분 칼같이! 중요한 부분만 선택하여 발표해야함>

1. 표지 @
안녕하십니까.
저희는 컴퓨터과학부 하경민, 도우찬 조입니다.
저희가 설계한 분석, 설계 산출물에 대한 중간발표를 진행하겠습니다.

2. 목차 @
발표 순서는 다음과 같습니다.

3. 프로젝트 소개 @
먼저, 저희는 프로젝트를
다음과 같이 정의하였습니다.

저희가 주목한 점은,
SIM을 재사용하고,
지도 정보를 탐색, 재구성 하며 자동제어 한다는 점이었습니다.

4. 유즈케이스도 @@@
다음은 유즈케이스도 입니다.
총 5개의 유즈케이스와, 2개의 액터로 분석하였습니다.

로봇을 사용하는 Operator란 액터와,
기존의 시스템인 SIM이란 액터로 분석하였습니다.

각 유즈케이스에 대한 설명은 
시나리오와 함께 설명하겠습니다.

5. Input Map Data 시나리오(지도 정보 입력) @
로봇사용자는 ADD-ON에 지도 정보를 입력한다.

저희가 신경쓴 점은,
탐색 지점과 위험 지점은 입력값이 여러개 일 수 있으므로,
loop를 통해 여러번 입력받는 것을 나타내었습니다.

6. Run Robot Searching 시나리오 @
사용자가 ADD-ON이 로봇 자동 제어를 수행하게 하는 유즈케이스입니다.

이 유즈케이스의 사전조건은
ADD-ON에 지도 정보가 입력되어 있어야 합니다. 

7. 세 가지 센서값 불러오기 시나리오 @
SIM은 ADD-ON에 위험 지점, 중요 지점, 
로봇 현재 위치 센서값을 입력한다.

액터와 ADD-ON간의 상호작용이 단순해서,
세 가지 시나리오를 함께 표현했습니다.

8. 전체 액티비티도 @@@
일반적인 탐색 흐름은 다음과 같습니다. 

사용자가 지도정보를 입력하고,
애드온이 경로를 계산합니다.
SIM에서 동시에 센서값을 받아와서,
지도 정보를 수정합니다.

지도 정보가 수정되었을때는,
다시 지도 정보를 받아 경로를 계산합니다.

센서값을 받아왔을때, 지도정보가 수정되지 않았을때는,
그대로 이동 명령을 작성하여
SIM의 Movement Interface에 전달하여 이동을 수행합니다.

그리고 정해진 탐색 지점을 다 지났으면
탐색을 종료합니다.
(포크와 조인 동시에 이뤄지는 것 세가지 센서값 다 받아야 넘어간다)

9. 아키텍쳐도 @
(빠르게 넘어가)
유즈케이스 분석을 바탕으로 클래스들을 도출하고,
다음과 같이 패키지를 만들었습니다.

바운더리 클래스를 담은 Interface
로봇 작동에 관련된 컨트롤과 엔티티 클래스를 담은 RobotArtifacts
지도 정보와 관련된 MapArtifacts
패키지로 구성하였습니다.

10. 메인클래스도 @@@
왼쪽위에 부분이 지도와 관련된 클래스,
오른쪽에 부분이 SIM의 sensor값을 불러오는 클래스,
왼쪽 밑에, 로봇의 경로를 계산하고, 이동 명령을 만드는 클래스들이
위치하고 있습니다.

센서값을 불러오는 세가지 유즈케이스의
시나리오가 비슷했던 것을 바탕으로,
센서값을 처리하는 SensorManager라는 추상 클래스를 만들고,
세 가지 자식 클래스가 상속하게 하여,
코드 재사용도 고려하였습니다.

11. Input Map Data 순차도 @
각 유즈케이스에 대한 순차도를 설명하겠습니다.

오퍼레이터가 지도정보를 입력하고,
맵 엔티티에 저장하고,
해당 지도를 맵GUI를 통해 출력하여
잘 입력되었는지 확인합니다.

12. Run Robot Searching 순차도@@@


13. 확대 1Run Robot Searching 순차도 @@@
지도 변경을 나타내는 플래그값을 확인하고,
지도가 변경되었으면 최적의 경로를 다시 계산하고,

14. 확대 2Run Robot Searching 순차도 @@@
그 이후에,
SIM의 Robot Movement Interface에 전달할
명령을 만들어 SIM에게 전달합니다


15. Read Hazard Sensor Data 순차도 @@
해저드센서 매니저가
센서값을 받아 값이 존재하는지 검사하고,
검사하면 맵 엔티티에
위험지점을 업데이트하고, 지도 변경 플래그를 수정합니다.

16. Read Color Blob Sensor Data 순차도 @
앞의 순차도와 비슷하지만 하나 다른점은,
중요지점을 탐색하였을 때는,
경로를 다시 계산하지 않으므로,
지도 변경 플래그를 수정하지 않는 것을 볼 수 있습니다.

17. Read Positioning Sensor Data 순차도 @@
다음 입니다
로봇 현재 위치를 받아올때는
센서매니저가 값이 존재하는지 셀프 메시지로 검사하지 않고,
맵매니저에 값을 보내 예상 위치와 같은지 검사하는 것을
볼 수 있습니다.

객체 상태도는 준비하지 못해서
최종 발표때는 꼭 포함시키도록 하겠습니다.

18. 감사합니다.
여기까지 발표 마치겠습니다. 감사합니다.


정현학
최현호
홍찬표
소석진
이영 허윤 
최지수
권순형
8. 김의중 양소연
9. 박민근 김환석
10. 하경민 도우찬

[발표 노트]
최종발표일때는 꼭 팀명 정하기.
한 슬라이드에 대해 시간을 오래쓰면, 오래걸리는 느낌을 주나봐 넘어가라하네
PyGame
결국 SIM은 구현하긴 해야함.
근데 프로젝트 소개문서에 외부액터라고 나왔긴한데,
우리가 할때는 구현하긴 해야함 ㅋㅋ
상태도
>복잡한 객체에 대해 설명해 줄 때